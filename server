import socket
import threading

class TupleSpace:
    def __init__(self):
        self.space = {}
        self.lock = threading.Lock()

    def put(self, key, value):
        with self.lock:
            if key in self.space:
                return f"ERR {key} already exists"
            self.space[key] = value
            return f"OK ({key}, {value}) added"

    def get(self, key):
        with self.lock:
            if key in self.space:
                val = self.space.pop(key)
                return f"OK ({key}, {val}) removed"
            return f"ERR {key} does not exist"
